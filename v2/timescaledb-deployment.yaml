# timescaledb-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timescaledb
  labels:
    app: timescaledb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: timescaledb
  template:
    metadata:
      labels:
        app: timescaledb
    spec:
      securityContext:
        fsGroup: 999
      containers:
        - name: timescaledb
          image: timescale/timescaledb:2.11.0-pg12
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: "postgres"
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "password"
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            - name: POSTGRES_HOST_AUTH_METHOD
              value: "trust"
          volumeMounts:
            - name: postgres-data
              mountPath: /var/lib/postgresql/data
            - name: hot-storage
              mountPath: /var/lib/postgresql/hot
            - name: cold-storage
              mountPath: /var/lib/postgresql/cold
            - name: archive-storage
              mountPath: /var/lib/postgresql/archive
            - name: init-scripts
              mountPath: /docker-entrypoint-initdb.d
          resources:
            requests:
              memory: "1Gi"
              cpu: "500m"
            limits:
              memory: "2Gi"
              cpu: "1000m"
      volumes:
        - name: postgres-data
          emptyDir: {}
        - name: hot-storage
          persistentVolumeClaim:
            claimName: timescale-hot-pvc
        - name: cold-storage
          persistentVolumeClaim:
            claimName: timescale-cold-pvc
        - name: archive-storage
          persistentVolumeClaim:
            claimName: timescale-archive-pvc
        - name: init-scripts
          configMap:
            name: timescale-init-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: timescaledb-service
spec:
  selector:
    app: timescaledb
  ports:
    - port: 5432
      targetPort: 5432
  type: ClusterIP
